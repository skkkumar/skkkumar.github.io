const RESONANCE_MATERIAL=Object.keys(ResonanceAudio.Utils.ROOM_MATERIAL_COEFFICIENTS);AFRAME.registerComponent("resonance-audio-room",{dependencies:["geometry","position"],multiple:!1,schema:{width:{type:"number",default:ResonanceAudio.Utils.DEFAULT_ROOM_DIMENSIONS.width},height:{type:"number",default:ResonanceAudio.Utils.DEFAULT_ROOM_DIMENSIONS.height},depth:{type:"number",default:ResonanceAudio.Utils.DEFAULT_ROOM_DIMENSIONS.depth},ambisonicOrder:{type:"int",default:ResonanceAudio.Utils.DEFAULT_AMBISONIC_ORDER,oneOf:[1,3]},speedOfSound:{type:"number",default:ResonanceAudio.Utils.DEFAULT_SPEED_OF_SOUND},left:{default:"brick-bare",oneOf:RESONANCE_MATERIAL},right:{default:"brick-bare",oneOf:RESONANCE_MATERIAL},front:{default:"brick-bare",oneOf:RESONANCE_MATERIAL},back:{default:"brick-bare",oneOf:RESONANCE_MATERIAL},down:{default:"brick-bare",oneOf:RESONANCE_MATERIAL},up:{default:"brick-bare",oneOf:RESONANCE_MATERIAL},src:{type:"string",default:""},loop:{type:"boolean",default:!0},autoplay:{type:"boolean",default:!0},gain:{type:"number",default:1}},init:function(){this.roomSetup=this.roomSetup.bind(this),this.handleLockedResume=this.handleLockedResume.bind(this),this.handleLockedPlay=this.handleLockedPlay.bind(this),this.connectBuffer=this.connectBuffer.bind(this),this.throttledFunction=AFRAME.utils.throttle(this.setListener,50,this),this.isUnlocked=!1;var sceneEl=this.el.sceneEl;this.builtInGeometry=!0,this.cameraMatrix4=new AFRAME.THREE.Matrix4,this.resonanceAudioContext=new AudioContext({latencyHint:"playback",sampleRate:22100}),this.resonanceAudioScene=new ResonanceAudio(this.resonanceAudioContext),this.resonanceAudioScene.output.connect(this.resonanceAudioContext.destination);const checkForBeatSyncComp=prefix=>{const beatsyncEl=Array.from(document.querySelectorAll("*")).filter(e=>Array.from(e.attributes).filter(({name:name,value:value})=>name.startsWith(prefix)).length)[0];if(beatsyncEl){const beatSrc=Object.keys(beatsyncEl.components).find(attr=>attr.startsWith(prefix));return!beatSrc}return!1};this.isBeatWait=checkForBeatSyncComp("beat-sync"),this.isBeatWait?this.handleWaitForBeats():this.clickUnlock()},update:function(oldData){this.roomSetup(),this.data.src&&this.data.src!==oldData.src&&this.setAmbisonicSource(this.data.src)},tick(){this.throttledFunction()},tock(){},setListener(){const cameraEl=this.el.sceneEl.camera.el;this.cameraMatrix4=cameraEl.object3D.matrixWorld,this.resonanceAudioScene.setListenerFromMatrix(this.cameraMatrix4)},roomSetup(){let dimensions={width:this.data.width,height:this.data.height,depth:this.data.depth};if(this.data.width+this.data.height+this.data.depth===0){const bb=(new AFRAME.THREE.Box3).setFromObject(this.el.object3D);dimensions.width=bb.getSize().x,dimensions.height=bb.getSize().y,dimensions.depth=bb.getSize().z,this.builtInGeometry=!1}this.builtInGeometry&&this.el.setAttribute("geometry",dimensions);let materials={left:this.data.left,right:this.data.right,front:this.data.front,back:this.data.back,down:this.data.down,up:this.data.up};this.resonanceAudioScene.setRoomProperties(dimensions,materials),this.setPosition()},disconnectPreviousSrc(){this.connectedSrc&&(this.ambisonicSourceNode.disconnect(this.resonanceAudioScene.ambisonicInput),delete this.ambisonicSourceNode,this.connectedSrc=!1)},setAmbisonicSource(src){this.disconnectPreviousSrc();var self=this;if("string"!=typeof src)throw new TypeError("invalid src");if("#"===src.charAt(0)){const el=document.querySelector(src);if(!el)throw new Error("invalid src");src=el.getAttribute("src"),this.data.src=src}""!==src&&void 0!==src&&fetch(src,{mode:"cors"}).then(function(resp){return resp.arrayBuffer()}).then(function(buffer){self.resonanceAudioContext.decodeAudioData(buffer,function(audioData){self.bufferNode=self.resonanceAudioContext.createBufferSource(),self.bufferNode.buffer=audioData,self.connectBuffer()})}).catch(err=>{console.log(err)})},connectBuffer(){this.splitter=this.resonanceAudioContext.createChannelSplitter(4),this.bufferNode.connect(this.splitter),this.ambisonicSourceNode=this.resonanceAudioContext.createChannelMerger(),this.splitter.connect(this.ambisonicSourceNode,0,0),this.splitter.connect(this.ambisonicSourceNode,1,1),this.splitter.connect(this.ambisonicSourceNode,2,2),this.splitter.connect(this.ambisonicSourceNode,3,3),this.resonanceAudioScene.ambisonicInput.channelInterpretation="discrete",this.resonanceAudioScene.ambisonicInput.channelCountMode="clamped-max",this.resonanceAudioScene.ambisonicInput.channelCount=4,this.ambisonicSourceNode.connect(this.resonanceAudioScene.ambisonicInput),this.resonanceAudioScene.ambisonicInput.gain.value=this.data.gain,this.data.loop&&(this.bufferNode.loop=!0),this.data.autoplay&&"running"===this.resonanceAudioContext.state&&this.playSound(),this.connectedSrc=!0},playSound(){this.bufferNode.start()},setPosition(){this.el.object3D.updateMatrixWorld()},handleWaitForBeats(){const self=this,camera=document.querySelector("[camera]"),waitForBeat=document.createElement("a-entity"),bufferLoaded=function(e){self.el.removeEventListener("bufferloaded",bufferLoaded);const beatsReady=()=>{self.el.removeEventListener("beatsready",beatsReady),camera.removeChild(waitForBeat),self.clickUnlock()};self.el.addEventListener("beatsready",beatsReady)};waitForBeat.setAttribute("text",{value:"Waiting for Beat Data...",geometry:"plane",align:"center",color:"red"}),waitForBeat.object3D.position.set(0,.1,-.7),self.el.addEventListener("bufferloaded",bufferLoaded),camera.appendChild(waitForBeat)},clickUnlock(){let isDesktop=!1;AFRAME.utils.device.isMobile()||AFRAME.utils.device.checkHeadsetConnected()?(this.startEvent="touchstart",this.endEvent="touchend"):(isDesktop=!0,this.startEvent="keypress",this.endEvent="keypress");var clickForAudioEl=document.createElement("a-entity"),camera;clickForAudioEl.setAttribute("text",{value:isDesktop?"Press Any Key":"Click for Audio",geometry:"plane",align:"center",color:"red"}),clickForAudioEl.object3D.position.set(0,.1,-.7),this.clickForAudioEl=clickForAudioEl,document.querySelector("[camera]").appendChild(clickForAudioEl),document.body.addEventListener(this.startEvent,this.handleLockedResume),document.body.addEventListener(this.endEvent,this.handleLockedPlay)},handleLockedResume(){var camera;document.body.removeEventListener(this.startEvent,this.handleLockedResume),document.querySelector("[camera]").removeChild(this.clickForAudioEl),this.clickForAudioEl=void 0;const cxt=this.resonanceAudioContext;cxt.resume(),this.isUnlocked=!0},handleLockedPlay(){document.body.removeEventListener(this.endEvent,this.handleLockedPlay),this.connectedSrc&&this.playSound();const children=this.el.getChildren();children.forEach(function(child,i){const components=child.components;components.hasOwnProperty("resonance-audio-src")&&components["resonance-audio-src"].data.autoplay&&components["resonance-audio-src"].playSound()}),document.addEventListener("keydown",this.toggleSound.bind(this))},toggleSound(e){const cxt=this.resonanceAudioContext;32===e.which&&("suspended"===cxt.state?cxt.resume():cxt.suspend())}}),AFRAME.registerPrimitive("a-resonance-audio-room",{defaultComponents:{"resonance-audio-room":{}},mappings:{width:"resonance-audio-room.width",height:"resonance-audio-room.height",depth:"resonance-audio-room.depth","ambisonic-order":"resonance-audio-room.ambisonicOrder","speed-of-sound":"resonance-audio-room.speedOfSound",left:"resonance-audio-room.left",right:"resonance-audio-room.right",front:"resonance-audio-room.front",back:"resonance-audio-room.back",down:"resonance-audio-room.down",up:"resonance-audio-room.up",src:"resonance-audio-room.src",loop:"resonance-audio-room.loop",autoplay:"resonance-audio-room.autoplay",gain:"resonance-audio-room.gain"}});